{"version":3,"sources":["context/store.js","context/reducers.js","components/header.js","components/column.js","helpers/api.js","components/info.js","components/weight.js","components/history.js","components/content.js","App.js","serviceWorker.js","index.js"],"names":["State","time","isConnected","machines","lines","categories","selectedMachine","selectedLine","selectedCategory","selectedProductionPlan","selectedDate","selectedShift","selectedPro","shifts","pros","histories","weight","Reducer","state","action","type","_objectSpread","value","Context","React","createContext","Disconnected","react_default","a","createElement","className","es5","name","Connected","Header","store","useContext","Row","gutter","Col","span","offset","header_Connected","header_Disconnected","Column","api","API_MAIN","axios","create","baseURL","timeout","Info","_useContext","dispatch","productionPlanningNotFound","MessageBox","alert","Fragment","placeholder","onChange","date","disabledDate","getTime","moment","subtract","disabled","size","e","loading","length","map","el","Option","key","id","label","shift_name","line_id","get","concat","format","headers","Authorization","localStorage","getItem","then","_ref","data","catch","err","console","error","po_number","category","socket","io","Weight","useEffect","on","msg","icon","onClick","machine","filter","x","line","confirm","confirmButtonText","cancelButtonText","post","weight_kg","rencanaProduksiId","machineId","badstockCategoryId","res","token","success","Message","message","History","d","i","badstock_category","rencana_produksi","lineId","created_at","tz","Content","info","components_history","App","_useReducer","useReducer","Store","_useReducer2","Object","slicedToArray","getHistory","getMachines","getShift","getLines","getCategories","setInterval","connection","username","password","roleId","setItem","accessToken","clearInterval","Provider","header","column","content","Boolean","window","location","hostname","match","i18n","use","locale","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a3df5175.chunk.js","sourcesContent":["const State = {\n    time: '',\n    isConnected: false,\n    machines: [],\n    lines: [],\n    categories: [],\n    selectedMachine: '',\n    selectedLine: '',\n    selectedCategory: '',\n    selectedProductionPlan: {},\n    selectedDate: '',\n    selectedShift: '',\n    selectedPro: '',\n    shifts: [],\n    pros: [],\n    histories: [],\n    weight: 1\n};\n\nexport default State;","import React from 'react';\n\nconst Reducer = (state, action) => {\n    switch(action.type) {\n        case 'set_time':\n            return { ...state, time: action.value };\n        case 'set_connection':\n            return { ...state, isConnected: action.value };\n        case 'set_machines':\n            return { ...state, machines: action.value };\n        case 'set_lines':\n            return { ...state, lines: action.value };\n        case 'set_shifts':\n            return { ...state, shifts: action.value };\n        case 'set_categories':\n            return { ...state, categories: action.value };\n        case 'set_selected_machine':\n            return { ...state, selectedMachine: action.value };\n        case 'set_selected_line':\n            return { ...state, selectedLine: action.value };\n        case 'set_selected_category':\n            return { ...state, selectedCategory: action.value };\n        case 'set_selected_date':\n            return { ...state, selectedDate: action.value };\n        case 'set_selected_shift':\n            return { ...state, selectedShift: action.value };\n        case 'set_weight':\n            return { ...state, weight: action.value };\n        case 'set_selected_production_plan':\n            return { ...state, selectedProductionPlan: action.value };\n        case 'set_selected_pro':\n            return { ...state, selectedPro: action.value };\n        case 'set_pros':\n            return { ...state, pros: action.value };\n        case 'set_histories':\n            return { ...state, histories: action.value };\n        case 'clear_input':\n            return { ...state, \n                selectedMachine: '',\n                selectedLine: '',\n                selectedCategory: '',\n                selectedProductionPlan: {},\n                selectedShift: '',\n                selectedDate: '',\n                selectedPro: '',\n                pros: [],\n                weight: 1\n            }\n        default:\n            return state;\n    }\n};\n\nconst Context = React.createContext();\n\nexport { Reducer, Context };\nexport { default as Store } from './store';","import React, { useContext } from 'react';\nimport { Layout, Icon } from 'element-react';\nimport { Context } from '../context/reducers';\n\nconst Disconnected = () => {\n    return (\n        <div className=\"p-2 text-center uppercase font-bold border-solid border-2 border-red-600 text-red-600 rounded\">\n            <span><Icon name=\"circle-close\"/> Disconnected</span>\n        </div>\n    );\n};\n\nconst Connected = () => {\n    return (\n        <div className=\"p-2 text-center uppercase font-bold border-solid border-2 border-green-600 text-green-600 rounded\">\n            <span><Icon name=\"circle-check\"/> Connected</span>\n        </div>\n    );\n};\n\nconst Header = () => {\n    const { store } = useContext(Context);\n\n    return (\n    <Layout.Row gutter=\"2\" className=\"select-none mt-4\">\n        <Layout.Col span=\"6\" offset=\"3\">\n        <div className=\"bg-blue-600 p-2 text-center uppercase text-white font-bold rounded border-solid border-2 border-blue-600\">\n            timbangan\n        </div>\n        </Layout.Col>\n        <Layout.Col span=\"6\">\n        <div className=\"p-2 text-center uppercase font-bold border-solid border-2 border-blue-600 rounded\">\n            {store.time}\n        </div>\n        </Layout.Col>\n        <Layout.Col span=\"6\">\n            {store.isConnected ? <Connected/>:<Disconnected/>}\n        </Layout.Col>\n    </Layout.Row>\n    );\n};\n\nexport default Header;","import React from 'react';\nimport { Layout } from 'element-react';\n\nconst Column = () => {\n    return (\n    <Layout.Row gutter=\"0\" className=\"pl-10 pr-10 pt-10 select-none\">\n        <Layout.Col span=\"8\">\n          <div className=\"uppercase font-bold bg-blue-600 p-2 rounded-l-lg text-center text-white\">info</div>\n        </Layout.Col>\n        <Layout.Col span=\"8\">\n          <div className=\"uppercase font-bold bg-blue-600 p-2 text-center text-white\">weight</div>\n        </Layout.Col>\n        <Layout.Col span=\"8\">\n          <div className=\"uppercase font-bold bg-blue-600 p-2 rounded-r-lg text-center text-white\">history</div>\n        </Layout.Col>\n    </Layout.Row>\n    );\n};\n\nexport default Column;","import axios from 'axios';\n\nexport default {\n    API_MAIN: axios.create({\n        // baseURL: \"http://192.168.13.2:8081/api/v1/\",\n        baseURL: 'http://dev-oee-sim.machinevision.global:8081/api/v1/',\n        timeout: 30000\n    })\n}","import React, { useContext } from 'react';\nimport { Select, MessageBox, DatePicker, Layout } from 'element-react';\nimport { Context } from '../context/reducers';\nimport api from '../helpers/api';\nimport moment from 'moment-timezone';\n\nconst Info = () => {\n    const { store, dispatch } = useContext(Context);\n\n    const productionPlanningNotFound = () => {\n        MessageBox.alert(`There are no active PO on the selected shift or line.`);\n    }\n\n    const selectLine = (line_id) => {\n        api.API_MAIN.get(`rencana-produksi/find/shift?date=${moment(store.selectedDate).format(`YYYY-MM-DD`)}&shift_id=${store.selectedShift}&line_id=${line_id}`, {\n            headers: {\n                'Authorization': `bearer ${localStorage.getItem('token')}`\n            }\n        })\n            .then(({ data }) => {\n                if (data.length > 0) {\n                    dispatch({ type: 'set_pros', value: data })\n                } else {\n                    productionPlanningNotFound();\n                    dispatch({ type: 'clear_input' });\n                }\n            })\n            .catch(err => {\n                console.error(err);\n                productionPlanningNotFound();\n                dispatch({ type: 'clear_input' });\n            });\n\n        dispatch({ type: 'set_selected_line', value: line_id });\n    }\n\n    return (\n    <React.Fragment>\n    <div>\n        <div className=\"font-bold\">Date</div>\n        <div>\n            <DatePicker\n                value={store.selectedDate}\n                placeholder=\"Pick a day\"\n                onChange={date=>dispatch({ type: 'set_selected_date', value: date })}\n                disabledDate={time=>(time.getTime() < moment().subtract(2, 'days') || time.getTime() > moment().subtract(0, 'days')) }\n            />\n        </div>\n    </div>\n    <Layout.Row>\n        <Layout.Col span=\"8\">\n            <div className=\"font-bold\">Shift</div>\n            <div>\n                <Select disabled={!store.selectedDate} placeholder=\"Select shift\" size=\"large\" value={store.selectedShift} \n                    onChange={e => dispatch({ type: 'set_selected_shift', value: e })}\n                    loading={store.shifts.length < 1}>\n                    {\n                        store.shifts.map(el => {\n                            return <Select.Option key={el.id} label={el.shift_name} value={el.id} />\n                        })\n                    }\n                </Select>\n            </div>\n        </Layout.Col>\n        <Layout.Col span=\"8\">\n            <div className=\"ml-2\">\n                <div className=\"font-bold\">Line</div>\n                <div>\n                    <Select disabled={!store.selectedShift} placeholder=\"Select line\" size=\"large\" value={store.selectedLine} \n                        onChange={e => selectLine(e)}\n                        loading={store.lines.length < 1}>\n                        {\n                            store.lines.map(el => {\n                                return <Select.Option key={el.id} label={el.name} value={el.id} />\n                            })\n                        }\n                    </Select>\n                </div>\n            </div>\n        </Layout.Col>\n    </Layout.Row>\n    <Layout.Row>\n        <Layout.Col span=\"8\">\n            <div className=\"font-bold\">PrO</div>\n                <div>\n                    <Select disabled={store.pros.length < 1} placeholder=\"Select PrO\" size=\"large\" value={store.selectedPro} \n                        onChange={e => {\n                            dispatch({ type: 'set_selected_pro', value: e })\n                        }}\n                        loading={store.pros.length < 1}>\n                        {\n                            store.pros.map(el => {\n                                return <Select.Option key={el.id} label={el.po_number} value={el.id} />\n                            })\n                        }\n                    </Select>\n                </div>\n        </Layout.Col>\n        <Layout.Col span=\"8\">\n            <div className=\"ml-2\">\n                <div className=\"font-bold\">Machine</div>\n                <div>\n                    <Select disabled={!store.selectedPro} placeholder=\"Select mesin\" size=\"large\" value={store.selectedMachine} \n                        onChange={e => dispatch({ type: 'set_selected_machine', value: e })}\n                        loading={store.machines.length < 1}>\n                        {\n                            store.machines.map(el => {\n                                return <Select.Option key={el.id} label={el.name} value={el.id} />\n                            })\n                        }\n                    </Select>\n                </div>\n            </div>\n        </Layout.Col>\n    </Layout.Row>\n    <div>\n        <div className=\"font-bold\">Category</div>\n        <div>\n            <Select disabled={!store.selectedMachine} placeholder=\"Select kategori\" size=\"large\" value={store.selectedCategory} \n                onChange={e => dispatch({ type: 'set_selected_category', value: e })}\n                loading={store.lines.length < 1}>\n                {\n                    store.categories.map(el => {\n                        return <Select.Option key={el.id} label={el.category} value={el.id} />\n                    })\n                }\n            </Select>\n        </div>\n    </div>\n    </React.Fragment>\n    );\n};\n\nexport default Info;","import React, { useContext, useEffect } from 'react';\nimport { Button, Message, MessageBox } from 'element-react';\nimport { Context } from '../context/reducers';\nimport io from 'socket.io-client';\nimport api from '../helpers/api';\nimport moment from 'moment-timezone';\n\nconst socket = io('http://localhost:9552');\n\nconst Weight = () => {\n    const { store, dispatch } = useContext(Context);\n\n    const getHistory = (token) => {\n        api.API_MAIN.get(`badstock/timbangan/history?date=${moment().format('YYYY-MM-DD')}`, {\n            headers: {\n            'Authorization': `bearer ${token}`\n            }\n        })\n            .then(res => dispatch({ type: 'set_histories', value: res.data }))\n            .catch(err => console.err(err));\n        }\n\n    const confirm = () => {\n        let machine = store.machines.filter(x => x.id === store.selectedMachine)[0].name;\n        let line = store.lines.filter(x => x.id === store.selectedLine)[0].name;\n        let category = store.categories.filter(x => x.id === store.selectedCategory)[0].category;\n\n        MessageBox.confirm(`Dengan ini akan dikirimkan data sebagai berikut: Mesin ${machine}, ${line}, Kategori ${category}, dan Berat ${store.weight} Kg. apakah sudah benar ?`, 'Warning', {\n            confirmButtonText: 'OK',\n            cancelButtonText: 'Cancel',\n            type: 'warning'\n        }).then(() => {\n            api.API_MAIN.post('badstock/timbangan', {\n                \"weight_kg\": store.weight,\n                \"rencanaProduksiId\": store.selectedPro,\n                \"machineId\": store.selectedMachine,\n                \"badstockCategoryId\": store.selectedCategory\n            }).then(res => {\n                    if(res.data.success) {\n                        Message({\n                            type: 'success',\n                            message: 'Sent!'\n                        });\n\n                        getHistory(localStorage.getItem('token'));\n                        \n                        dispatch({ type: 'clear_input' });\n                    }\n                })\n                .catch(err => console.error(err));\n        }).catch(() => {\n            Message({\n                type: 'info',\n                message: 'Canceled'\n            });\n        });\n    }\n\n    useEffect(() => {\n        socket.on('weight_streaming', (msg) => dispatch({ type: 'set_weight', value: msg }));\n    }, [dispatch])\n\n    return (\n        <React.Fragment>\n        <div className=\"ml-4\">\n            <div className=\"font-bold\">Weight (Kg)</div>\n            <div className=\"p-2 w-4/5 text-2xl text-center border font-bold h rounded border-gray-500\">\n                {store.weight}\n            </div>\n            <div className=\"mt-2\">\n                <Button type=\"warning\" size=\"large\"\n                    icon=\"circle-check\"\n                    className=\"w-4/5\" onClick={confirm} \n                    disabled={!store.selectedMachine || !store.selectedLine || !store.selectedCategory || !store.selectedProductionPlan}>\n                        Send\n                    </Button>\n            </div>\n        </div>\n        </React.Fragment>\n    );\n};\n\nexport default Weight;","import React, { useContext } from 'react';\nimport { Context } from '../context/reducers';\nimport moment from 'moment-timezone';\n\nconst History = () => {\n    const { store } = useContext(Context);\n\n    return (\n        <React.Fragment>\n        <div className=\"rounded overflow-auto mt-2 h-64 p-2 border border-blue-600 w-full\">\n            {store.histories.map((d, i) => <div key={i} className=\"mb-2 border-b-2 border-blue-600\">\n                <table className=\"m-0 p-0\">\n                    <tbody>\n                        <tr>\n                            <td>{i+1}.</td>\n                            <td>{d.machine.name}</td>\n                            <td>|</td>\n                            <td>{d.badstock_category.category}</td>\n                        </tr>\n                        <tr>\n                            <td></td>\n                            <td>{store.lines.filter(x => x.id === d.rencana_produksi.lineId)[0].name}</td>\n                            <td></td>\n                            <td></td>\n                        </tr>\n                        <tr>\n                            <td></td>\n                            <td>{moment(d.created_at).tz('utc').format('DD MM YYYY')}</td>\n                            <td>|</td>\n                            <td>{moment(d.created_at).tz('utc').format('HH:mm:ss')}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>)}\n          </div>\n        </React.Fragment>\n    );\n};\n\nexport default History;","import React from 'react';\nimport { Layout } from 'element-react';\nimport Info from './info';\nimport Weight from './weight';\nimport History from './history';\n\nconst Content = () => {\n    return (\n    <Layout.Row gutter=\"2\" className=\"pl-10 pr-10 mt-2\">\n        <Layout.Col span=\"8\">\n            <Info/>\n        </Layout.Col>\n        <Layout.Col span=\"8\">\n            <Weight/>\n        </Layout.Col>\n        <Layout.Col span=\"8\">\n          <History/>\n        </Layout.Col>\n    </Layout.Row>\n    );\n};\n\nexport default Content;","import React, { useReducer, useEffect } from 'react';\nimport Header from './components/header';\nimport Column from './components/column';\nimport Content from './components/content';\nimport { Context, Reducer, Store } from './context/reducers';\nimport moment from 'moment-timezone';\nimport api from './helpers/api';\n\nconst App = () => {\n  const [store, dispatch] = useReducer(Reducer, Store);\n\n  const auth = () => {\n    api.API_MAIN.post('auth/login', {\n      \"username\": \"operator\",\n      \"password\": \"operator\",\n      \"roleId\": 2\n    }).then(res => {\n      localStorage.setItem('token', res.data.accessToken)\n    \n      getMachines();\n      getLines();\n      getCategories(res.data.accessToken);\n      getShift();\n      getHistory(res.data.accessToken);\n    }).catch(err => {\n      console.error(err)\n    });\n  }\n\n  const getHistory = (token) => {\n    api.API_MAIN.get(`badstock/timbangan/history?date=${moment().format('YYYY-MM-DD')}`, {\n      headers: {\n        'Authorization': `bearer ${token}`\n      }\n    })\n      .then(res => dispatch({ type: 'set_histories', value: res.data }))\n      .catch(err => console.error(err));\n  }\n\n  const getMachines = () => {\n    api.API_MAIN.get('machine')\n      .then(res => dispatch({ type: 'set_machines', value: res.data }))\n      .catch(err => console.error(err));\n  };\n\n  const getShift = () => {\n    api.API_MAIN.get('initial-shift')\n      .then(res => dispatch({ type: 'set_shifts', value: res.data }))\n      .catch(err => console.error(err))\n  }\n\n  const getLines = () => {\n    api.API_MAIN.get('line')\n      .then(res => dispatch({ type: 'set_lines', value: res.data }))\n      .catch(err => console.error(err))\n  };\n\n  const getCategories = (token) => {\n    api.API_MAIN.get('badstock-category', {\n      headers: {\n        'Authorization': `bearer ${token}`\n      }\n    })\n      .then(res => dispatch({ type: 'set_categories', value: res.data }))\n      .catch(err => console.error(err))\n  };\n\n  useEffect(() => {\n    let time = setInterval(() => dispatch({ type: 'set_time', value: moment().format(`HH:mm:ss`) }), 1000);\n    let connection = setInterval(() => {\n      api.API_MAIN.get('line')\n        .then(() => dispatch({ type: 'set_connection', value: true }))\n        .catch(() => dispatch({ type: 'set_connection', value: false }))\n      getHistory(localStorage.getItem('token'));\n    }, 5000);\n\n    if (!localStorage.getItem('token')) {\n      auth();\n    } else {\n      getMachines();\n      getLines();\n      getCategories(localStorage.getItem('token'));\n      getShift();\n      getHistory(localStorage.getItem('token'));\n    }\n\n    return () => {\n      clearInterval(time);\n      clearInterval(connection);\n      time = connection = null;\n    };\n  }, [])\n\n  return (\n    <Context.Provider value={{ store, dispatch }}>\n      <Header/>\n      <Column/>\n      <Content/>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'element-theme-default';\nimport './css/tailwind.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { i18n } from 'element-react';\nimport locale from 'element-react/src/locale/lang/en';\ni18n.use(locale);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}